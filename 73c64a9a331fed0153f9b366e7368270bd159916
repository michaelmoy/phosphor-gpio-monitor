{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "90cc81f0_0791a822",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-12-12T16:28:04Z",
      "side": 1,
      "message": "Usually it\u0027s asked that a YAML definition of the D-Bus interface is submitted to phosphor-dbus-interfaces so it can have officially documented types.\n\nHow this is defined now though it can\u0027t be done, since the property names are dynamic.  \n\nCould you instead put the GPIO name into a \u0027Name\u0027 property, and then submit the interface YAML to phosphor-dbus-interfaces for review?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 30
      },
      "revId": "73c64a9a331fed0153f9b366e7368270bd159916",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b390473b_2e041584",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2022-12-15T09:44:23Z",
      "side": 1,
      "message": "We will discuss and provide our idea later.",
      "parentUuid": "90cc81f0_0791a822",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 30
      },
      "revId": "73c64a9a331fed0153f9b366e7368270bd159916",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b235dad_f986780d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-12-15T12:47:16Z",
      "side": 1,
      "message": "Dynamic property names like this violate dbus conventions anyhow.  The expectation is that any dbus interface (like ...GpioStatus) would be the same in every single object path and process where it exists.",
      "parentUuid": "b390473b_2e041584",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 30
      },
      "revId": "73c64a9a331fed0153f9b366e7368270bd159916",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa39568c_73c07d9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-12-15T12:45:42Z",
      "side": 1,
      "message": "This approach has been proposed so many times already that we\u0027ve documented an anti-pattern on why it is not accepted.\n\nhttps://github.com/openbmc/docs/blob/f4febd002df578bad816239b70950f84ea4567e8/anti-patterns.md#dbus-interface-representing-gpios",
      "revId": "73c64a9a331fed0153f9b366e7368270bd159916",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc65b18f_628887cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2022-12-19T09:30:52Z",
      "side": 1,
      "message": "According to our understanding, phosphor-gpio-monitor is used to handle GPIO interrupt.\n\nThus, if we couldn\u0027t register these gpios which should be mointored here.\n\nWhere could we handle these GPIOs?",
      "parentUuid": "fa39568c_73c07d9b",
      "revId": "73c64a9a331fed0153f9b366e7368270bd159916",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8e40fff_493b1cdb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2022-12-20T01:31:48Z",
      "side": 1,
      "message": "Hi Patrick,\n\nPlease ignore the previous reply.\n\nAnd here is the situation.\n\nWe must monitor these gpios to set the current host state.\nhttps://gerrit.openbmc.org/c/openbmc/openbmc/+/58896/11/meta-facebook/meta-greatlakes/recipes-phosphor/gpio/phosphor-gpio-monitor/phosphor-multi-gpio-monitor.json\n\nHowever,  if BMC monitors these gpios, then the resources are occupied causing that BMC could not use gpioget tool anywhere.\nhttps://github.com/openbmc/openbmc/blob/master/meta-facebook/recipes-phosphor/state/phosphor-state-manager/greatlakes/chassis-poweroff#L17\n\nIn that case, BMC should have another method to get current 12V state, so we recommend a design that register gpio values on Dbus so that BMC could get 12V state anywhere.",
      "parentUuid": "bc65b18f_628887cd",
      "revId": "73c64a9a331fed0153f9b366e7368270bd159916",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0d5978a_7ef8c8ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2022-12-22T06:04:40Z",
      "side": 1,
      "message": "Hi Patrick,\n\nAfter survey the phosphor-power repo, we found out that current design couldn\u0027t support multi-host pgood on Dbus in phosphor-power-sequencer.\n\nWe think each pgood information for each slot should be displayed on different Dbus for multi-host architecture.\n\nMoreover, we shuold provide a option in meson file for different projects to use different ways to monitor these pgood gpios.\n\nCurrent design uses call back function in a timer to monitor pgood gpio.\nHowever, the timer polling time is 3 seconds now and maybe too long.\n\nThus, we propose another method that we could register gpio interrupt in phosphor-gpio-monitor for these pgood gpios and start corresponding targets to set pgood property on Dbus.\n\nBy adding this option in meson file, different projects could decide their own method to monitor pgood gpios. \n\nIf some projects insist to use the call back function in timer to monitor pgood state, the function is still workable.\n\nIf some projects disable this option, they could use their own method to monitor pgood state like registering gpio interrupt.",
      "parentUuid": "a8e40fff_493b1cdb",
      "revId": "73c64a9a331fed0153f9b366e7368270bd159916",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}